{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a129f3bc-1869-43a3-a329-9cad7803eafe",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tkinter as tk\n",
    "\n",
    "# --- Crear ventana principal ---\n",
    "ventana = tk.Tk()\n",
    "ventana.title(\"Calculadora de CalorÃ­as\")\n",
    "ventana.geometry(\"480x400\")\n",
    "ventana.configure(bg=\"#f0f0f0\")\n",
    "\n",
    "# --- Base de datos vacÃ­a ---\n",
    "ingredientes_calorias = {}\n",
    "\n",
    "# --- Variables ---\n",
    "ingrediente_var = tk.StringVar()\n",
    "objetivo_var = tk.StringVar(value=\"Selecciona tu objetivo\")\n",
    "\n",
    "# --- Etiquetas y campos ---\n",
    "tk.Label(ventana, text=\"Ingrediente:\", bg=\"#f0f0f0\").grid(row=0, column=0, padx=10, pady=10, sticky=\"e\")\n",
    "entrada_ingrediente = tk.Entry(ventana, textvariable=ingrediente_var)\n",
    "entrada_ingrediente.grid(row=0, column=1, padx=10, pady=10)\n",
    "\n",
    "tk.Label(ventana, text=\"Cantidad (g):\", bg=\"#f0f0f0\").grid(row=1, column=0, padx=10, pady=10, sticky=\"e\")\n",
    "entrada_cantidad = tk.Entry(ventana)\n",
    "entrada_cantidad.grid(row=1, column=1, padx=10, pady=10)\n",
    "\n",
    "tk.Label(ventana, text=\"Tu peso (kg):\", bg=\"#f0f0f0\").grid(row=2, column=0, padx=10, pady=10, sticky=\"e\")\n",
    "entrada_peso = tk.Entry(ventana)\n",
    "entrada_peso.grid(row=2, column=1, padx=10, pady=10)\n",
    "\n",
    "tk.Label(ventana, text=\"Objetivo calÃ³rico:\", bg=\"#f0f0f0\").grid(row=3, column=0, padx=10, pady=10, sticky=\"e\")\n",
    "menu_objetivo = tk.OptionMenu(ventana, objetivo_var, \"DÃ©ficit\", \"Mantenimiento\", \"SuperÃ¡vit\")\n",
    "menu_objetivo.grid(row=3, column=1, padx=10, pady=10)\n",
    "\n",
    "# --- Etiqueta para mostrar resultado ---\n",
    "resultado = tk.Label(ventana, text=\"\", font=(\"Arial\", 12), bg=\"#f0f0f0\")\n",
    "resultado.grid(row=5, column=0, columnspan=2, pady=10)\n",
    "\n",
    "# --- FunciÃ³n para calcular calorÃ­as y comparar con objetivo ---\n",
    "def calcular():\n",
    "    ingrediente = ingrediente_var.get().lower()\n",
    "    objetivo = objetivo_var.get()\n",
    "    try:\n",
    "        cantidad = float(entrada_cantidad.get())\n",
    "        peso = float(entrada_peso.get())\n",
    "        if ingrediente in ingredientes_calorias and objetivo != \"Selecciona tu objetivo\":\n",
    "            calorias = (ingredientes_calorias[ingrediente] * cantidad) / 100\n",
    "            gasto_estimado = peso * 30\n",
    "\n",
    "            if objetivo == \"DÃ©ficit\":\n",
    "                meta = gasto_estimado - 300\n",
    "            elif objetivo == \"SuperÃ¡vit\":\n",
    "                meta = gasto_estimado + 300\n",
    "            else:\n",
    "                meta = gasto_estimado\n",
    "\n",
    "            diferencia = calorias - meta\n",
    "\n",
    "            if diferencia > 50:\n",
    "                estado = f\"ðŸ”´ Por encima del objetivo (+{diferencia:.2f} kcal)\"\n",
    "            elif diferencia < -50:\n",
    "                estado = f\"ðŸŸ¢ Por debajo del objetivo ({diferencia:.2f} kcal)\"\n",
    "            else:\n",
    "                estado = \"âšª Cerca del objetivo\"\n",
    "\n",
    "            resultado.config(text=f\"CalorÃ­as: {calorias:.2f} kcal\\n{estado}\", fg=\"green\")\n",
    "        else:\n",
    "            resultado.config(text=\"Ingrediente no registrado o falta objetivo\", fg=\"red\")\n",
    "    except ValueError:\n",
    "        resultado.config(text=\"Cantidad o peso invÃ¡lido\", fg=\"red\")\n",
    "\n",
    "# --- FunciÃ³n para limpiar campos ---\n",
    "def limpiar():\n",
    "    ingrediente_var.set(\"\")\n",
    "    entrada_cantidad.delete(0, tk.END)\n",
    "    entrada_peso.delete(0, tk.END)\n",
    "    objetivo_var.set(\"Selecciona tu objetivo\")\n",
    "    resultado.config(text=\"\", fg=\"black\")\n",
    "\n",
    "# --- Botones ---\n",
    "boton_calcular = tk.Button(ventana, text=\"Calcular\", command=calcular)\n",
    "boton_calcular.grid(row=4, column=0, pady=10)\n",
    "\n",
    "boton_limpiar = tk.Button(ventana, text=\"Limpiar\", command=limpiar)\n",
    "boton_limpiar.grid(row=4, column=1, pady=10)\n",
    "\n",
    "# --- Ejecutar la ventana ---\n",
    "ventana.mainloop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ef421d6-b3d6-442c-9fac-ccc4b19e2f97",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
